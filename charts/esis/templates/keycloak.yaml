apiVersion: apps/v1
kind: Deployment
metadata:
  name: keycloak
  labels:
    app: keycloak
spec:
  replicas: 1
  selector:
    matchLabels:
      app: keycloak
  template:
    metadata:
      labels:
        app: keycloak
    spec:
      initContainers:
      - name: wait-for-db-service
        image: busybox:latest
        command: ['sh', '-c',
          'until nc -vz mysql 3306; do echo "Waiting for mysql service"; sleep 2; done;']
      containers:
        - name: keycloak
          image: {{ .Values.keycloakImage }}
          ports:
            - containerPort: 8080
            - containerPort: 9990
          readinessProbe:
            httpGet:
              path: /auth
              port: 8080
            initialDelaySeconds: 15
            timeoutSeconds: 5
            periodSeconds: 8
            failureThreshold: 2
          livenessProbe:
            httpGet:
              path: /auth
              port: 8080
            initialDelaySeconds: 20
            timeoutSeconds: 5
            periodSeconds: 8
            failureThreshold: 2
          env:
          - name: KEYCLOAK_USER
            value: admin
          - name: KEYCLOAK_PASSWORD
            value: admin
          - name: DB_VENDOR
            value: mysql
          - name: DB_ADDR
            value: mysql
          - name: DB_USER
            value: keycloak
          - name: DB_PASSWORD
            value: password
          - name: JDBC_PARAMS
            value: useSSL=false
          - name: PROXY_ADDRESS_FORWARDING
            value: "true"
---
apiVersion: v1
kind: Service
metadata:
  name: keycloak
spec:
  selector:
    app: keycloak
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
# ---
# {{- $rootPasswordValue := (randAlpha 16) | b64enc | quote }}
# {{- $secret := (lookup "v1" "Secret" .Release.Namespace "db-keys") }}
# {{- if $secret }}
# {{- $rootPasswordValue = index $secret.data "root-password" }}
# {{- end -}}
# apiVersion: v1
# kind: Secret
# metadata:
#   name: db-keys
# type: Opaque
# data:
#   root-password: {{ $rootPasswordValue}}